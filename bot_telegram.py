import telebot
from stuff import *  # –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞ stuff.py

import os

bot = telebot.TeleBot(os.environ.get('TELEGRAM_KEY'))

answers = {
    'git': '–í–≤–µ–¥–∏ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "GIT –ó–∞–ø—Ä–æ—Å –Ø–∑—ã–∫_–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è" –∏ —è –¥–∞–º —Ç–µ–±–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ 5 —Å–ª—É—á–∞–π–Ω—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤',
    'help': '–Ø —É–º–µ—é –∏—Å–∫–∞—Ç—å –ø–æ –≥–∏—Ç—Ö–∞–±—É –∏ –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Å–ª–æ–≤–∞ –∑–∞ —Ç–æ–±–æ–π. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –∏—Å–∫–∞—Ç—å, –Ω–∞–ø–∏—à–∏ –º–Ω–µ —Å–ª–æ–≤–æ git',
}


@bot.message_handler(commands=['start', 'help', 'dog'])
def commands(message):
    if message.text == '/start':
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.chat.username}!üëã')
        ans = read_text('templates/help.txt')
        bot.send_message(message.chat.id, text=ans, parse_mode='html')
    elif message.text == '/help':
        ans = read_text('templates/help.txt')
        bot.send_message(message.chat.id, text=ans, parse_mode='html')
    elif message.text == '/dog':
        img = get_image()
        bot.send_photo(message.chat.id, photo=img)


@bot.message_handler(commands=['weather'])
def button_message(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    #btn1 = telebot.types.KeyboardButton('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞', request_contact=True)
    btn2 = telebot.types.KeyboardButton('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ª–æ–∫–∞—Ü–∏–µ–π', request_location=True)
    #markup.add(btn1)
    markup.add(btn2)
    bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É, –ø–æ–¥–µ–ª–∏—Å—å —Å–æ –º–Ω–æ–π –ª–æ–∫–∞—Ü–∏–µ–π.', reply_markup=markup)


@bot.message_handler(content_types=['contact', 'location'])
def contact(message):
    if message.contact is not None:  # –µ—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        save_user_info(str(message.contact) + '\n')
    elif message.location is not None:
        lat = message.location.latitude
        long = message.location.longitude
        forecast = get_forecast(lat, long)
        bot.send_message(message.chat.id, text=forecast, parse_mode='html')


@bot.message_handler(content_types=['text'])  # –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä
def repeat_message(message):
    if message.text.startswith('GIT'):
        msg = message.text.split()
        res = git_search(msg[1], msg[2])
        msg = "–í–æ—Ç, —á—Ç–æ —è —Å–º–æ–≥ –Ω–∞–π—Ç–∏:\n" + res
        bot.send_message(message.chat.id, text=msg, parse_mode='html')